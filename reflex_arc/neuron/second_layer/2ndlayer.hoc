load_file("nrngui.hoc")
ncell = 20       /* The number of cells */
nsyn = 2
nMN = 169       /* The number of cells */
nInt = 196
nAff = 120
nRC = 196
nIP = 120
nSens = 100
ncells = ncell*21+nIP+nMN+nAff+2*nInt+nRC+nSens

{load_file("./templates/EES.hoc")}
{load_file("./templates/ex.hoc")}
{load_file("./templates/inh.hoc")}
{load_file("./templates/ip.hoc")}
{load_file("./templates/MNE.hoc")}
{load_file("./templates/Ia.hoc")}
{load_file("./templates/IaintE.hoc")}
{load_file("./templates/IbintE.hoc")}
{load_file("./templates/RCE.hoc")}
{load_file("./templates/sens1.hoc")}
{load_file("save.hoc")}


objref cells, nil, nc
cells = new List()

objref pc, r
pc = new ParallelContext()

proc addcell(){
    cells.append($o1)
    pc.set_gid2node($2, $3)
    nc = cells.object(cells.count()-1).connect2target(nil)
    pc.cell($2, nc)
}

for (i=pc.id; i < ncell*12; i += pc.nhost){
    addcell(new Ex(i), i, pc.id)
}

for (i=pc.id+ncell*12; i < ncell*21; i += pc.nhost){
    addcell(new Inh((i - ncell)*2), i, pc.id)
}

for (i=pc.id+ncell*21; i < ncell*21+nIP; i += pc.nhost){
    addcell(new IP0(i - 21*ncell), i, pc.id)
}

for (i=pc.id+ncell*21+nIP; i < ncell*21+nIP+nMN; i += pc.nhost){
    addcell(new MNE(i - 22*ncell), i, pc.id)
}

for (i=pc.id+ncell*21+nIP+nMN; i < ncell*21+nIP+nMN+nAff; i += pc.nhost){
    addcell(new Ia(fr1.get(i-(ncell*21+nIP+nMN))), i, pc.id)
}

for (i=pc.id+ncell*21+nIP+nMN+nAff; i < ncell*21+nIP+nMN+nAff+nInt; i += pc.nhost){
    addcell(new IaE(i - 24*ncell), i, pc.id)
}

for (i=pc.id+ncell*21+nIP+nMN+nAff+nInt; i < ncell*21+nIP+nMN+nAff+2*nInt; i += pc.nhost){
    addcell(new IbE(i - 24*ncell), i, pc.id)
}

for (i=pc.id+ncell*21+nIP+nMN+nAff+2*nInt; i < ncell*21+nIP+nMN+nAff+2*nInt+nRC; i += pc.nhost){
    addcell(new RCE(i - 25*ncell), i, pc.id)
}

for (i=pc.id+ncell*21+nIP+nMN+nAff+2*nInt+nRC; i < ncell*21+nIP+nMN+nAff+2*nInt+nRC+nSens; i += pc.nhost){
    addcell(new sens1(i - 28*ncell), i, pc.id)
}

//add EES
if (pc.id == 0) {
    {addcell(new EES(), ncells, pc.id)}
}

{load_file("connections.hoc")}
{load_file("recording.hoc")}

